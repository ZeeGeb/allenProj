{"ast":null,"code":"var _jsxFileName = \"/home/zee/allen/allen/src/Components/login/login.js\";\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport React, { Component, useState } from 'react';\nimport { Row } from 'react-bootstrap';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline'; //import TextField from '@material-ui/core/TextField';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { TextField } from 'formik-material-ui'; //import img from \"../../Images/facebook-logo.png\";\n\nimport axios from 'axios'; //import auth from './AuthService';\n\nimport Cookie from \"js-cookie\";\nimport './index.css';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(5),\n    height: theme.spacing(5)\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"black\",\n    backgroundColor: '#498ec5',\n    '&:hover': {\n      backgroundColor: '#b6d1de'\n    }\n  },\n  image: {\n    width: 'auto',\n    height: 'auto'\n  },\n  button: {\n    color: \"#498ec5\",\n    backgroundColor: '#b6d1de',\n    '&:hover': {\n      backgroundColor: '#498ec5'\n    }\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeUserName = this.onChangeUserName.bind(this);\n    this.onChangeCheck = this.onChangeCheck.bind(this);\n    this.state = {\n      username: '',\n      password: '',\n      remember: false\n    };\n  }\n\n  onChangeUserName(e) {\n    this.setState({\n      username: e\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e\n    });\n  }\n\n  onChangeCheck(e) {\n    this.setState({\n      remember: e.target.checked\n    });\n  }\n\n  render() {\n    const schema = Yup.object().shape({\n      username: Yup.string().required(\"This field is required\"),\n      password: Yup.string().required(\"This field is required\")\n    });\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      validateOnBlur: false,\n      validateOnChange: true,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        /*  const data = {\n            username: values.username,\n            password: values.password\n          };\n          \n          const options = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n          };\n          \n          axios.post('http://3.209.12.36:8000/api/account/login', data, options)\n           .then((res) => {\n             console.log(\"RESPONSE ==== : \", res);\n             console.log(res.data.response)\n             if (res.data.response == \"Successfully authenticated.\") {\n              auth.login(() => {\n                Cookie.set(\"token\", res.data.token);\n                console.log(this.state.remember)\n                if (this.state.remember) {\n                  localStorage.setItem('token', res.data.token);\n                  localStorage.setItem('rememberme', 'yes');\n                  localStorage.setItem('id', res.data.pk);\n                } else {\n                  console.log(Cookie.get(\"token\"));\n                  var date = new Date();\n                  date.getDate();\n                  var tomorrow = new Date();\n                  tomorrow.setDate(date.getDate() + 1);\n                  localStorage.setItem('date', date);\n                  localStorage.setItem('tomorrow', tomorrow);\n                  localStorage.setItem('rememberme', 'no');\n                  localStorage.setItem('token', res.data.token);\n                  localStorage.setItem('id', res.data.pk);\n                }\n                this.props.history.push('/home');\n                \n               })\n             } else {\n               alert(\"Invalid Username or Password\");\n             }\n            })\n           .catch((err) => {\n             console.log(\"ERROR: ====\", err);\n           })\n        //setSubmitting(false);\n        setTimeout(() => {\n          setSubmitting(false);\n          /*console.log(values);\n          alert(JSON.stringify(values, null, 2));*/\n        //   }, 500);\n      },\n      initialValues: {\n        username: '',\n        password: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      submitForm,\n      isSubmitting,\n      errors\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'MyFont',\n        fontSize: '70px',\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, \"Allen\"), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      component: TextField,\n      color: \"black\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      onChange: handleChange,\n      isInvalid: touched.username && !!errors.username,\n      isValid: touched.username && !errors.username,\n      autoComplete: \"username\",\n      autoFocus: true,\n      style: {\n        color: \"#b6d1de\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      component: TextField,\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      onChange: handleChange,\n      isInvalid: touched.password && !!errors.password,\n      isValid: touched.password && !errors.password,\n      autoComplete: \"current-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: this.state.remember,\n        onChange: this.onChangeCheck,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 24\n        }\n      }),\n      label: \"Remember me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }), isSubmitting && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      color: \"#b6d1de\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/register\",\n      variant: \"body2\",\n      color: \"#b6d1de\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \"Don't have an account? Sign Up\")))))));\n  }\n\n}\n\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/home/zee/allen/allen/src/Components/login/login.js"],"names":["Formik","Field","Form","Yup","React","Component","useState","Row","Avatar","Button","LinearProgress","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","withStyles","Container","TextField","axios","Cookie","createMuiTheme","styles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","width","height","form","submit","color","image","button","Login","constructor","props","onChangePassword","bind","onChangeUserName","onChangeCheck","state","username","password","remember","e","setState","target","checked","render","schema","object","shape","string","required","classes","values","setSubmitting","handleSubmit","handleChange","handleBlur","touched","isValid","submitForm","isSubmitting","errors","fontFamily","fontSize","padding"],"mappings":"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","sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport React, { Component, useState } from 'react';\nimport { Row } from 'react-bootstrap';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, LinearProgress } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n//import TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { TextField } from 'formik-material-ui';\n//import img from \"../../Images/facebook-logo.png\";\nimport axios from 'axios';\n//import auth from './AuthService';\nimport Cookie from \"js-cookie\";\nimport './index.css';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(5),\n    height: theme.spacing(5),\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"black\",\n    backgroundColor: '#498ec5',\n    '&:hover': {\n      backgroundColor: '#b6d1de'\n    }\n  },\n  image: {\n    width: 'auto',\n    height: 'auto'\n  },\n  button: {\n    color: \"#498ec5\",\n    backgroundColor: '#b6d1de',\n    '&:hover': {\n      backgroundColor: '#498ec5'\n    }\n  }\n});      \n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeUserName = this.onChangeUserName.bind(this);\n    this.onChangeCheck = this.onChangeCheck.bind(this);\n    this.state = {\n      username: '',\n      password: '',\n      remember: false\n    }\n  };\n\n  onChangeUserName(e) {\n    this.setState({username: e})\n  }\n  onChangePassword(e) {\n    this.setState({password: e})\n  }\n  \n  onChangeCheck(e) {\n    this.setState({remember: e.target.checked})\n  }\n  render() {\n    const schema = Yup.object().shape({\n      username: Yup.string().required(\"This field is required\"),\n      password: Yup.string().required(\"This field is required\")\n                  \n    });\n\n    \n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n        <Formik \n        validationSchema={schema}\n        validateOnBlur={false}\n        validateOnChange={true}\n        onSubmit={(values, { setSubmitting }) => {\n            \n          /*  const data = {\n              username: values.username,\n              password: values.password\n            };\n            \n            const options = {\n              headers: {\n                  'Content-Type': 'application/json',\n              }\n            };\n            \n            axios.post('http://3.209.12.36:8000/api/account/login', data, options)\n             .then((res) => {\n               console.log(\"RESPONSE ==== : \", res);\n               console.log(res.data.response)\n               if (res.data.response == \"Successfully authenticated.\") {\n                auth.login(() => {\n                  Cookie.set(\"token\", res.data.token);\n                  console.log(this.state.remember)\n                  if (this.state.remember) {\n                    localStorage.setItem('token', res.data.token);\n                    localStorage.setItem('rememberme', 'yes');\n                    localStorage.setItem('id', res.data.pk);\n                  } else {\n                    console.log(Cookie.get(\"token\"));\n                    var date = new Date();\n                    date.getDate();\n                    var tomorrow = new Date();\n                    tomorrow.setDate(date.getDate() + 1);\n                    localStorage.setItem('date', date);\n                    localStorage.setItem('tomorrow', tomorrow);\n                    localStorage.setItem('rememberme', 'no');\n                    localStorage.setItem('token', res.data.token);\n                    localStorage.setItem('id', res.data.pk);\n                  }\n                  this.props.history.push('/home');\n                  \n                 })\n               } else {\n                 alert(\"Invalid Username or Password\");\n               }\n\n             })\n             .catch((err) => {\n               console.log(\"ERROR: ====\", err);\n             })\n          //setSubmitting(false);\n          setTimeout(() => {\n            setSubmitting(false);\n            /*console.log(values);\n            alert(JSON.stringify(values, null, 2));*/\n       //   }, 500);\n        }}\n        initialValues={{ \n          username: '',\n          password:\"\", \n          }}\n      >\n        {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        submitForm,\n        isSubmitting,\n        errors,\n      }) => (\n        <div className={classes.paper}>\n          <div style={{fontFamily: 'MyFont', fontSize: '70px', padding: '20px'}}>\n            Allen\n          </div>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <Field\n              component={TextField}\n              color=\"black\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              onChange={handleChange}\n              isInvalid={touched.username && !!errors.username}\n              isValid ={touched.username && !errors.username}\n              autoComplete=\"username\"\n              autoFocus\n              style={{color: \"#b6d1de\"}}\n            />\n            <Field\n              component={TextField}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={handleChange}\n              isInvalid={touched.password && !!errors.password}\n              isValid ={touched.password && !errors.password}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value={this.state.remember} onChange={this.onChangeCheck} color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            {isSubmitting && <LinearProgress />}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\" color=\"#b6d1de\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\" color=\"#b6d1de\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      )}\n    </Formik>\n    </Container> \n    );\n  }\n}\n      \nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}